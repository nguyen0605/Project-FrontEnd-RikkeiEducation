let currentPage = 1;
const quizzesPerPage = 8;
let filteredQuizzes = []; 

// D·ªØ li·ªáu ban ƒë·∫ßu t·ª´ localStorage
const quizzes = JSON.parse(localStorage.getItem('quizzes')) || [
    { id: 1, name: 'Th√°ch th·ª©c to√°n h·ªçc', playCount: 5 },
    { id: 2, name: 'Ki·∫øn th·ª©c ƒë·ªãa l√Ω', playCount: 10 },
    { id: 3, name: 'L·ªãch s·ª≠ th·∫ø gi·ªõi', playCount: 3 },
    { id: 4, name: 'Ki·∫øn th·ª©c khoa h·ªçc', playCount: 12 },
    { id: 5, name: 'VƒÉn h·ªçc Vi·ªát Nam', playCount: 7 },
    { id: 6, name: 'ƒê·ªùi s·ªëng x√£ h·ªôi', playCount: 9 },
    { id: 7, name: 'Nh·∫°c pop qu·ªëc t·∫ø', playCount: 2 },
    { id: 8, name: 'Tr√≠ tu·ªá nh√¢n t·∫°o', playCount: 15 },
    { id: 9, name: 'L·ªãch s·ª≠ Vi·ªát Nam', playCount: 8 },
    { id: 10, name: 'L·ªãch s·ª≠ Th·∫ø chi·∫øn II', playCount: 4 }
];

// Render quiz theo trang
function renderQuizzes(page = 1) {
    const list = filteredQuizzes.length > 0 ? filteredQuizzes : quizzes;
    const start = (page - 1) * quizzesPerPage;
    const end = start + quizzesPerPage;
    const quizzesToDisplay = list.slice(start, end);

    const quizListContainer = document.getElementById("quiz-list");
    quizListContainer.innerHTML = '';

    if (quizzesToDisplay.length === 0) {
        quizListContainer.innerHTML = `
            <div class="text-center py-5">
                <h5>‚ö° Kh√¥ng c√≥ b√†i test n√†o ƒë·ªÉ hi·ªÉn th·ªã!</h5>
            </div>
        `;
        return;
    }

    quizzesToDisplay.forEach(quiz => {
        const quizCard = `
            <div class="col-md-6 col-lg-6">
                <div class="card shadow-sm p-3 d-flex flex-row align-items-center mb-3">
                    <img src="../asset/images/test/Image.png" alt="quiz-img" class="img-fluid rounded me-3" style="width: 80px; height: 80px;">
                    <div>
                        <div>üè° ${quiz.name}</div>
                        <strong>Th√°ch th·ª©c s·ª± hi·ªÉu bi·∫øt c·ªßa b·∫°n</strong>
                        <div>${quiz.playCount} l∆∞·ª£t ch∆°i</div>
                    </div>
                    <div class="ms-auto">
                        <button class="btn btn-warning btn-sm">Ch∆°i</button>
                    </div>
                </div>
            </div>
        `;
        quizListContainer.innerHTML += quizCard;
    });
}

// Render ph√¢n trang
function renderPagination() {
    const list = filteredQuizzes.length > 0 ? filteredQuizzes : quizzes;
    const totalPages = Math.ceil(list.length / quizzesPerPage);
    const paginationContainer = document.getElementById("pagination");
    paginationContainer.innerHTML = '';

    if (totalPages <= 1) return; // N·∫øu ch·ªâ c√≥ 1 trang th√¨ kh√¥ng c·∫ßn ph√¢n trang

    paginationContainer.innerHTML += `
      <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
        <a class="page-link" href="#" aria-label="Previous" onclick="changePage(${currentPage - 1})">&laquo;</a>
      </li>
    `;

    for (let i = 1; i <= totalPages; i++) {
        paginationContainer.innerHTML += `
          <li class="page-item ${currentPage === i ? 'active' : ''}">
            <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
          </li>
        `;
    }

    paginationContainer.innerHTML += `
      <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
        <a class="page-link" href="#" aria-label="Next" onclick="changePage(${currentPage + 1})">&raquo;</a>
      </li>
    `;
}

// Chuy·ªÉn trang
function changePage(page) {
    const list = filteredQuizzes.length > 0 ? filteredQuizzes : quizzes;
    const totalPages = Math.ceil(list.length / quizzesPerPage);

    if (page < 1) page = 1;
    if (page > totalPages) page = totalPages;

    currentPage = page;
    renderQuizzes(currentPage);
    renderPagination();
}

// T√¨m ki·∫øm
const searchInput = document.getElementById("search");

searchInput.addEventListener('keypress', function (event) {
    if (event.key === 'Enter') {
        event.preventDefault(); // NgƒÉn submit form

        const keyword = searchInput.value.trim().toLowerCase();

        if (keyword === '') {
            // N·∫øu kh√¥ng nh·∫≠p g√¨ ‚ûî reset v·ªÅ danh s√°ch g·ªëc
            filteredQuizzes = [];
        } else {
            // N·∫øu c√≥ nh·∫≠p t·ª´ kh√≥a ‚ûî l·ªçc danh s√°ch
            filteredQuizzes = quizzes.filter(quiz => quiz.name.toLowerCase().includes(keyword));
        }

        currentPage = 1; // Reset v·ªÅ trang 1
        renderQuizzes(currentPage);
        renderPagination();
    }
});

//Khi s·∫Øp x·∫øp
document.getElementById('sortAsc').addEventListener('click', function () {
    sortQuizzes('asc');
});

document.getElementById('sortDesc').addEventListener('click', function () {
    sortQuizzes('desc');
});

// H√†m s·∫Øp x·∫øp
function sortQuizzes(order) {
    const list = filteredQuizzes.length > 0 ? filteredQuizzes : quizzes;

    list.sort((a, b) => {
        if (order === 'asc') {
            return a.playCount - b.playCount; // TƒÉng d·∫ßn
        } else {
            return b.playCount - a.playCount; // Gi·∫£m d·∫ßn
        }
    });

    currentPage = 1; // Reset v·ªÅ trang 1 sau khi s·∫Øp x·∫øp
    renderQuizzes(currentPage);
    renderPagination();
}

function setupAuth() {
    const isLoggedIn = localStorage.getItem('isLoggedIn');
    const isAdmin = localStorage.getItem('isAdmin') === 'true';

    if (isLoggedIn) {
        if (isAdmin) {
            window.location.href = "../pages/category-manager.html";
        } else {
            window.location.href = "../pages/home.html";
        }
    } else {
        container.classList.add("active"); // N·∫øu ch∆∞a login, m·ªü form ƒëƒÉng k√Ω
    }
}



// Khi t·∫£i trang
renderQuizzes(currentPage);
renderPagination();



